<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
 
<hibernate-configuration>
    <session-factory>
 
        <!-- Connection settings -->
        <property name="hibernate.connection.driver_class">org.postgresql.Driver</property>
        <property name="hibernate.connection.url">jdbc:postgresql://localhost:5432/Storefront</property>
        <property name="hibernate.connection.username">coach</property>
        <property name="hibernate.connection.password">123456</property>
        <property name="hibernate.connection.initialSize">2</property>
        <property name="hibernate.connection.loginTimeout">10</property>
        <property name="hibernate.connection.maxActive">0</property>
        <property name="hibernate.connection.maxIdle">30</property>
        <property name="hibernate.connection.maxWait">10000</property>
        <property name="hibernate.connection.maxAge">30000</property>
        <property name="hibernate.connection.defaultSchema">Storefront</property>
        <property name="hibernate.connection.defaultReadOnly">false</property>
        <property name="hibernate.connection.defaultAutoCommit">true</property>
        <property name="hibernate.connection.testOnReturn">false</property>
        <property name="hibernate.connection.testOnBorrow">false</property>
        <property name="hibernate.connection.testWhileIdle">false</property>
        <property name="hibernate.connection.validationQuery">SELECT 1 FROM DUAL</property>
        <property name="hibernate.connection.validationInterval">30000</property>
        <property name="hibernate.connection.timeBetweenEvictionRunsMillis">5000</property>
        <property name="hibernate.connection.url-delimiter">|</property>

        <!-- Disable the second-level cache (best practice with NuoDB) -->
        <!-- See http://www.nuodb.com/techblog/tag/memcached/ for more info -->
        <property name="cache.provider_class">org.hibernate.cache.NoCacheProvider</property>
        <property name="cache.use_query_cache">false</property>
        <property name="cache.use_minimal_puts">false</property>

        <!-- In eager fetching, only join three tables deep if joins are 
            used -->
        <property name="max_fetch_depth">3</property>

        <!-- Print SQL to stdout, format it nicely -->
        <property name="show_sql">false</property>
        <property name="format_sql">true</property>
        <property name="use_sql_comments">true</property>

        <!-- Drop and then re-create schema on SessionFactory build, for 
            testing -->
        <property name="hbm2ddl.auto">update</property>

        <!-- Use thread-bound persistence context propagation, scoped to 
            the transaction -->
        <property name="current_session_context_class">thread</property>
 
        <!-- Annotated entity classes -->
        <!-- Add mappings (using annotations) -->
        <mapping class="com.nuodb.storefront.model.entity.AppInstance" />
        <mapping class="com.nuodb.storefront.model.entity.CartSelection" />
        <mapping class="com.nuodb.storefront.model.entity.Customer" />
        <mapping class="com.nuodb.storefront.model.entity.Product" />
        <mapping class="com.nuodb.storefront.model.entity.ProductReview" />
        <mapping class="com.nuodb.storefront.model.entity.Purchase" />
        <mapping class="com.nuodb.storefront.model.entity.PurchaseSelection" />
        
    </session-factory>
</hibernate-configuration>
